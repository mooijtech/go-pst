// go-pst is a library for reading Personal Storage Table (.pst) files (written in Go/Golang).
//
// Copyright 2023 Marten Mooij
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:generate msgp -tests=false

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: sharing.proto

package properties

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sharing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingAnonymity *int32 `protobuf:"varint,1,opt,name=sharing_anonymity,json=sharingAnonymity,proto3,oneof" json:"sharing_anonymity,omitempty" msg:"353533,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingBrowseUrl *string `protobuf:"bytes,3,opt,name=sharing_browse_url,json=sharingBrowseUrl,proto3,oneof" json:"sharing_browse_url,omitempty" msg:"3540931,omitempty"`  
	// Indicates that the Message object relates to a special folder.
	SharingCapabilities *int32 `protobuf:"varint,4,opt,name=sharing_capabilities,json=sharingCapabilities,proto3,oneof" json:"sharing_capabilities,omitempty" msg:"353513,omitempty"`  
	// Contains a zero-length string.
	SharingConfigurationUrl *string `protobuf:"bytes,5,opt,name=sharing_configuration_url,json=sharingConfigurationUrl,proto3,oneof" json:"sharing_configuration_url,omitempty" msg:"3536431,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingDataRangeEnd *int64 `protobuf:"varint,6,opt,name=sharing_data_range_end,json=sharingDataRangeEnd,proto3,oneof" json:"sharing_data_range_end,omitempty" msg:"3539764,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingDataRangeStart *int64 `protobuf:"varint,7,opt,name=sharing_data_range_start,json=sharingDataRangeStart,proto3,oneof" json:"sharing_data_range_start,omitempty" msg:"3539664,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingDetail *int32 `protobuf:"varint,8,opt,name=sharing_detail,json=sharingDetail,proto3,oneof" json:"sharing_detail,omitempty" msg:"353713,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingExtensionXml *string `protobuf:"bytes,9,opt,name=sharing_extension_xml,json=sharingExtensionXml,proto3,oneof" json:"sharing_extension_xml,omitempty" msg:"3536131,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingFlags *int32 `protobuf:"varint,11,opt,name=sharing_flags,json=sharingFlags,proto3,oneof" json:"sharing_flags,omitempty" msg:"353383,omitempty"`  
	// Indicates the type of Sharing Message object.
	SharingFlavor *int32 `protobuf:"varint,12,opt,name=sharing_flavor,json=sharingFlavor,proto3,oneof" json:"sharing_flavor,omitempty" msg:"353523,omitempty"`  
	// Contains the value of the PidTagDisplayName property (section 2.676) from the Address Book object identified by the PidLidSharingInitiatorEntryId property (section 2.248).
	SharingInitiatorName *string `protobuf:"bytes,16,opt,name=sharing_initiator_name,json=sharingInitiatorName,proto3,oneof" json:"sharing_initiator_name,omitempty" msg:"3533531,omitempty"`  
	// Contains the value of the PidTagSmtpAddress property (section 2.1020) from the Address Book object identified by the PidLidSharingInitiatorEntryId property (section 2.248).
	SharingInitiatorSmtp *string `protobuf:"bytes,17,opt,name=sharing_initiator_smtp,json=sharingInitiatorSmtp,proto3,oneof" json:"sharing_initiator_smtp,omitempty" msg:"3533631,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLastAutoSyncTime *int64 `protobuf:"varint,19,opt,name=sharing_last_auto_sync_time,json=sharingLastAutoSyncTime,proto3,oneof" json:"sharing_last_auto_sync_time,omitempty" msg:"3541364,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLastSyncTime *int64 `protobuf:"varint,20,opt,name=sharing_last_sync_time,json=sharingLastSyncTime,proto3,oneof" json:"sharing_last_sync_time,omitempty" msg:"3535964,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalComment *string `protobuf:"bytes,21,opt,name=sharing_local_comment,json=sharingLocalComment,proto3,oneof" json:"sharing_local_comment,omitempty" msg:"3540531,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalLastModificationTime *int64 `protobuf:"varint,22,opt,name=sharing_local_last_modification_time,json=sharingLocalLastModificationTime,proto3,oneof" json:"sharing_local_last_modification_time,omitempty" msg:"3536364,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalName *string `protobuf:"bytes,23,opt,name=sharing_local_name,json=sharingLocalName,proto3,oneof" json:"sharing_local_name,omitempty" msg:"3534331,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalPath *string `protobuf:"bytes,24,opt,name=sharing_local_path,json=sharingLocalPath,proto3,oneof" json:"sharing_local_path,omitempty" msg:"3534231,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalStoreUid *string `protobuf:"bytes,25,opt,name=sharing_local_store_uid,json=sharingLocalStoreUid,proto3,oneof" json:"sharing_local_store_uid,omitempty" msg:"3540131,omitempty"`  
	// Contains the value of the PidTagContainerClass property (section 2.642) of the folder being shared.
	SharingLocalType *string `protobuf:"bytes,26,opt,name=sharing_local_type,json=sharingLocalType,proto3,oneof" json:"sharing_local_type,omitempty" msg:"3534831,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingLocalUid *string `protobuf:"bytes,27,opt,name=sharing_local_uid,json=sharingLocalUid,proto3,oneof" json:"sharing_local_uid,omitempty" msg:"3534431,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingParticipants *string `protobuf:"bytes,30,opt,name=sharing_participants,json=sharingParticipants,proto3,oneof" json:"sharing_participants,omitempty" msg:"3535831,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingPermissions *int32 `protobuf:"varint,31,opt,name=sharing_permissions,json=sharingPermissions,proto3,oneof" json:"sharing_permissions,omitempty" msg:"353553,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingProviderExtension *string `protobuf:"bytes,32,opt,name=sharing_provider_extension,json=sharingProviderExtension,proto3,oneof" json:"sharing_provider_extension,omitempty" msg:"3533931,omitempty"`  
	// Contains a user-displayable name of the sharing provider identified by the PidLidSharingProviderGuid property (section 2.266).
	SharingProviderName *string `protobuf:"bytes,34,opt,name=sharing_provider_name,json=sharingProviderName,proto3,oneof" json:"sharing_provider_name,omitempty" msg:"3533031,omitempty"`  
	// Contains a URL related to the sharing provider identified by the PidLidSharingProviderGuid property (section 2.266).
	SharingProviderUrl *string `protobuf:"bytes,35,opt,name=sharing_provider_url,json=sharingProviderUrl,proto3,oneof" json:"sharing_provider_url,omitempty" msg:"3533131,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRangeEnd *int32 `protobuf:"varint,36,opt,name=sharing_range_end,json=sharingRangeEnd,proto3,oneof" json:"sharing_range_end,omitempty" msg:"353993,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRangeStart *int32 `protobuf:"varint,37,opt,name=sharing_range_start,json=sharingRangeStart,proto3,oneof" json:"sharing_range_start,omitempty" msg:"353983,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingReciprocation *int32 `protobuf:"varint,38,opt,name=sharing_reciprocation,json=sharingReciprocation,proto3,oneof" json:"sharing_reciprocation,omitempty" msg:"353543,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteByteSize *int32 `protobuf:"varint,39,opt,name=sharing_remote_byte_size,json=sharingRemoteByteSize,proto3,oneof" json:"sharing_remote_byte_size,omitempty" msg:"354033,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteComment *string `protobuf:"bytes,40,opt,name=sharing_remote_comment,json=sharingRemoteComment,proto3,oneof" json:"sharing_remote_comment,omitempty" msg:"3537531,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteCrc *int32 `protobuf:"varint,41,opt,name=sharing_remote_crc,json=sharingRemoteCrc,proto3,oneof" json:"sharing_remote_crc,omitempty" msg:"354043,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteLastModificationTime *int64 `protobuf:"varint,42,opt,name=sharing_remote_last_modification_time,json=sharingRemoteLastModificationTime,proto3,oneof" json:"sharing_remote_last_modification_time,omitempty" msg:"3536264,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteMessageCount *int32 `protobuf:"varint,43,opt,name=sharing_remote_message_count,json=sharingRemoteMessageCount,proto3,oneof" json:"sharing_remote_message_count,omitempty" msg:"354073,omitempty"`  
	// Contains the value of the PidTagDisplayName property (section 2.676) on the folder being shared.
	SharingRemoteName *string `protobuf:"bytes,44,opt,name=sharing_remote_name,json=sharingRemoteName,proto3,oneof" json:"sharing_remote_name,omitempty" msg:"3533331,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemotePass *string `protobuf:"bytes,45,opt,name=sharing_remote_pass,json=sharingRemotePass,proto3,oneof" json:"sharing_remote_pass,omitempty" msg:"3534131,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemotePath *string `protobuf:"bytes,46,opt,name=sharing_remote_path,json=sharingRemotePath,proto3,oneof" json:"sharing_remote_path,omitempty" msg:"3533231,omitempty"`  
	// Contains a hexadecimal string representation of the value of the PidTagStoreEntryId property (section 2.1028) on the folder being shared.
	SharingRemoteStoreUid *string `protobuf:"bytes,47,opt,name=sharing_remote_store_uid,json=sharingRemoteStoreUid,proto3,oneof" json:"sharing_remote_store_uid,omitempty" msg:"3540031,omitempty"`  
	// Contains the same value as the PidLidSharingLocalType property (section 2.259).
	SharingRemoteType *string `protobuf:"bytes,48,opt,name=sharing_remote_type,json=sharingRemoteType,proto3,oneof" json:"sharing_remote_type,omitempty" msg:"3535731,omitempty"`  
	// Contains the EntryID of the folder being shared.
	SharingRemoteUid *string `protobuf:"bytes,49,opt,name=sharing_remote_uid,json=sharingRemoteUid,proto3,oneof" json:"sharing_remote_uid,omitempty" msg:"3533431,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteUser *string `protobuf:"bytes,50,opt,name=sharing_remote_user,json=sharingRemoteUser,proto3,oneof" json:"sharing_remote_user,omitempty" msg:"3534031,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRemoteVersion *string `protobuf:"bytes,51,opt,name=sharing_remote_version,json=sharingRemoteVersion,proto3,oneof" json:"sharing_remote_version,omitempty" msg:"3541931,omitempty"`  
	// Contains the time at which the recipient of the sharing request sent a sharing response.
	SharingResponseTime *int64 `protobuf:"varint,52,opt,name=sharing_response_time,json=sharingResponseTime,proto3,oneof" json:"sharing_response_time,omitempty" msg:"3536864,omitempty"`  
	// Contains the type of response with which the recipient of the sharing request responded.
	SharingResponseType *int32 `protobuf:"varint,53,opt,name=sharing_response_type,json=sharingResponseType,proto3,oneof" json:"sharing_response_type,omitempty" msg:"353673,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingRoamLog *int32 `protobuf:"varint,54,opt,name=sharing_roam_log,json=sharingRoamLog,proto3,oneof" json:"sharing_roam_log,omitempty" msg:"354063,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingStart *int64 `protobuf:"varint,55,opt,name=sharing_start,json=sharingStart,proto3,oneof" json:"sharing_start,omitempty" msg:"3536564,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingStatus *int32 `protobuf:"varint,56,opt,name=sharing_status,json=sharingStatus,proto3,oneof" json:"sharing_status,omitempty" msg:"353283,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingStop *int64 `protobuf:"varint,57,opt,name=sharing_stop,json=sharingStop,proto3,oneof" json:"sharing_stop,omitempty" msg:"3536664,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingSyncFlags *int32 `protobuf:"varint,58,opt,name=sharing_sync_flags,json=sharingSyncFlags,proto3,oneof" json:"sharing_sync_flags,omitempty" msg:"354243,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingSyncInterval *int32 `protobuf:"varint,59,opt,name=sharing_sync_interval,json=sharingSyncInterval,proto3,oneof" json:"sharing_sync_interval,omitempty" msg:"353703,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingTimeToLive *int32 `protobuf:"varint,60,opt,name=sharing_time_to_live,json=sharingTimeToLive,proto3,oneof" json:"sharing_time_to_live,omitempty" msg:"353723,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingTimeToLiveAuto *int32 `protobuf:"varint,61,opt,name=sharing_time_to_live_auto,json=sharingTimeToLiveAuto,proto3,oneof" json:"sharing_time_to_live_auto,omitempty" msg:"354143,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingWorkingHoursDays *int32 `protobuf:"varint,62,opt,name=sharing_working_hours_days,json=sharingWorkingHoursDays,proto3,oneof" json:"sharing_working_hours_days,omitempty" msg:"353943,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingWorkingHoursEnd *int64 `protobuf:"varint,63,opt,name=sharing_working_hours_end,json=sharingWorkingHoursEnd,proto3,oneof" json:"sharing_working_hours_end,omitempty" msg:"3539364,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	SharingWorkingHoursStart *int64 `protobuf:"varint,64,opt,name=sharing_working_hours_start,json=sharingWorkingHoursStart,proto3,oneof" json:"sharing_working_hours_start,omitempty" msg:"3539264,omitempty"`  
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	XSharingBrowseUrl_ *string `protobuf:"bytes,66,opt,name=x_sharing_browse_url,json=xSharingBrowseUrl,proto3,oneof" json:"x_sharing_browse_url,omitempty"`
	// Contains a string representation of the value of the PidLidSharingCapabilities property (section 2.237).
	XSharingCapabilities_ *string `protobuf:"bytes,67,opt,name=x_sharing_capabilities,json=xSharingCapabilities,proto3,oneof" json:"x_sharing_capabilities,omitempty"`
	// Contains the same value as the PidLidSharingConfigurationUrl property (section 2.238).
	XSharingConfigUrl *string `protobuf:"bytes,68,opt,name=x_sharing_config_url,json=xSharingConfigUrl,proto3,oneof" json:"x_sharing_config_url,omitempty"`
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	XSharingExendedCaps *string `protobuf:"bytes,69,opt,name=x_sharing_exended_caps,json=xSharingExendedCaps,proto3,oneof" json:"x_sharing_exended_caps,omitempty"`
	// Contains a hexadecimal string representation of the value of the PidLidSharingFlavor property (section 2.245).
	XSharingFlavor_ *string `protobuf:"bytes,70,opt,name=x_sharing_flavor,json=xSharingFlavor,proto3,oneof" json:"x_sharing_flavor,omitempty"`
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	XSharingInstanceGuid *string `protobuf:"bytes,71,opt,name=x_sharing_instance_guid,json=xSharingInstanceGuid,proto3,oneof" json:"x_sharing_instance_guid,omitempty"`
	// Contains the same value as the PidLidSharingLocalType property (section 2.259).
	XSharingLocalType_ *string `protobuf:"bytes,72,opt,name=x_sharing_local_type,json=xSharingLocalType,proto3,oneof" json:"x_sharing_local_type,omitempty"`
	// Contains the hexadecimal string representation of the value of the PidLidSharingProviderGuid property (section 2.266).
	XSharingProviderGuid *string `protobuf:"bytes,73,opt,name=x_sharing_provider_guid,json=xSharingProviderGuid,proto3,oneof" json:"x_sharing_provider_guid,omitempty"`
	// Contains the same value as the PidLidSharingProviderName property (section 2.267).
	XSharingProviderName_ *string `protobuf:"bytes,74,opt,name=x_sharing_provider_name,json=xSharingProviderName,proto3,oneof" json:"x_sharing_provider_name,omitempty"`
	// Contains the same value as the PidLidSharingProviderUrl property (section 2.268).
	XSharingProviderUrl_ *string `protobuf:"bytes,75,opt,name=x_sharing_provider_url,json=xSharingProviderUrl,proto3,oneof" json:"x_sharing_provider_url,omitempty"`
	// Contains the same value as the PidLidSharingRemoteName property (section 2.277).
	XSharingRemoteName_ *string `protobuf:"bytes,76,opt,name=x_sharing_remote_name,json=xSharingRemoteName,proto3,oneof" json:"x_sharing_remote_name,omitempty"`
	// Contains a value that is ignored by the server no matter what value is generated by the client.
	XSharingRemotePath_ *string `protobuf:"bytes,77,opt,name=x_sharing_remote_path,json=xSharingRemotePath,proto3,oneof" json:"x_sharing_remote_path,omitempty"`
	// Contains the same value as the PidLidSharingRemoteStoreUid property (section 2.282).
	XSharingRemoteStoreUid_ *string `protobuf:"bytes,78,opt,name=x_sharing_remote_store_uid,json=xSharingRemoteStoreUid,proto3,oneof" json:"x_sharing_remote_store_uid,omitempty"`
	// Contains the same value as the PidLidSharingRemoteType property (section 2.281).
	XSharingRemoteType_ *string `protobuf:"bytes,79,opt,name=x_sharing_remote_type,json=xSharingRemoteType,proto3,oneof" json:"x_sharing_remote_type,omitempty"`
	// Contains the same value as the PidLidSharingRemoteUid property (section 2.282).
	XSharingRemoteUid_ *string `protobuf:"bytes,80,opt,name=x_sharing_remote_uid,json=xSharingRemoteUid,proto3,oneof" json:"x_sharing_remote_uid,omitempty"`
}

func (x *Sharing) Reset() {
	*x = Sharing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sharing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sharing) ProtoMessage() {}

func (x *Sharing) ProtoReflect() protoreflect.Message {
	mi := &file_sharing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sharing.ProtoReflect.Descriptor instead.
func (*Sharing) Descriptor() ([]byte, []int) {
	return file_sharing_proto_rawDescGZIP(), []int{0}
}

func (x *Sharing) GetSharingAnonymity() int32 {
	if x != nil && x.SharingAnonymity != nil {
		return *x.SharingAnonymity
	}
	return 0
}

func (x *Sharing) GetSharingBrowseUrl() string {
	if x != nil && x.SharingBrowseUrl != nil {
		return *x.SharingBrowseUrl
	}
	return ""
}

func (x *Sharing) GetSharingCapabilities() int32 {
	if x != nil && x.SharingCapabilities != nil {
		return *x.SharingCapabilities
	}
	return 0
}

func (x *Sharing) GetSharingConfigurationUrl() string {
	if x != nil && x.SharingConfigurationUrl != nil {
		return *x.SharingConfigurationUrl
	}
	return ""
}

func (x *Sharing) GetSharingDataRangeEnd() int64 {
	if x != nil && x.SharingDataRangeEnd != nil {
		return *x.SharingDataRangeEnd
	}
	return 0
}

func (x *Sharing) GetSharingDataRangeStart() int64 {
	if x != nil && x.SharingDataRangeStart != nil {
		return *x.SharingDataRangeStart
	}
	return 0
}

func (x *Sharing) GetSharingDetail() int32 {
	if x != nil && x.SharingDetail != nil {
		return *x.SharingDetail
	}
	return 0
}

func (x *Sharing) GetSharingExtensionXml() string {
	if x != nil && x.SharingExtensionXml != nil {
		return *x.SharingExtensionXml
	}
	return ""
}

func (x *Sharing) GetSharingFlags() int32 {
	if x != nil && x.SharingFlags != nil {
		return *x.SharingFlags
	}
	return 0
}

func (x *Sharing) GetSharingFlavor() int32 {
	if x != nil && x.SharingFlavor != nil {
		return *x.SharingFlavor
	}
	return 0
}

func (x *Sharing) GetSharingInitiatorName() string {
	if x != nil && x.SharingInitiatorName != nil {
		return *x.SharingInitiatorName
	}
	return ""
}

func (x *Sharing) GetSharingInitiatorSmtp() string {
	if x != nil && x.SharingInitiatorSmtp != nil {
		return *x.SharingInitiatorSmtp
	}
	return ""
}

func (x *Sharing) GetSharingLastAutoSyncTime() int64 {
	if x != nil && x.SharingLastAutoSyncTime != nil {
		return *x.SharingLastAutoSyncTime
	}
	return 0
}

func (x *Sharing) GetSharingLastSyncTime() int64 {
	if x != nil && x.SharingLastSyncTime != nil {
		return *x.SharingLastSyncTime
	}
	return 0
}

func (x *Sharing) GetSharingLocalComment() string {
	if x != nil && x.SharingLocalComment != nil {
		return *x.SharingLocalComment
	}
	return ""
}

func (x *Sharing) GetSharingLocalLastModificationTime() int64 {
	if x != nil && x.SharingLocalLastModificationTime != nil {
		return *x.SharingLocalLastModificationTime
	}
	return 0
}

func (x *Sharing) GetSharingLocalName() string {
	if x != nil && x.SharingLocalName != nil {
		return *x.SharingLocalName
	}
	return ""
}

func (x *Sharing) GetSharingLocalPath() string {
	if x != nil && x.SharingLocalPath != nil {
		return *x.SharingLocalPath
	}
	return ""
}

func (x *Sharing) GetSharingLocalStoreUid() string {
	if x != nil && x.SharingLocalStoreUid != nil {
		return *x.SharingLocalStoreUid
	}
	return ""
}

func (x *Sharing) GetSharingLocalType() string {
	if x != nil && x.SharingLocalType != nil {
		return *x.SharingLocalType
	}
	return ""
}

func (x *Sharing) GetSharingLocalUid() string {
	if x != nil && x.SharingLocalUid != nil {
		return *x.SharingLocalUid
	}
	return ""
}

func (x *Sharing) GetSharingParticipants() string {
	if x != nil && x.SharingParticipants != nil {
		return *x.SharingParticipants
	}
	return ""
}

func (x *Sharing) GetSharingPermissions() int32 {
	if x != nil && x.SharingPermissions != nil {
		return *x.SharingPermissions
	}
	return 0
}

func (x *Sharing) GetSharingProviderExtension() string {
	if x != nil && x.SharingProviderExtension != nil {
		return *x.SharingProviderExtension
	}
	return ""
}

func (x *Sharing) GetSharingProviderName() string {
	if x != nil && x.SharingProviderName != nil {
		return *x.SharingProviderName
	}
	return ""
}

func (x *Sharing) GetSharingProviderUrl() string {
	if x != nil && x.SharingProviderUrl != nil {
		return *x.SharingProviderUrl
	}
	return ""
}

func (x *Sharing) GetSharingRangeEnd() int32 {
	if x != nil && x.SharingRangeEnd != nil {
		return *x.SharingRangeEnd
	}
	return 0
}

func (x *Sharing) GetSharingRangeStart() int32 {
	if x != nil && x.SharingRangeStart != nil {
		return *x.SharingRangeStart
	}
	return 0
}

func (x *Sharing) GetSharingReciprocation() int32 {
	if x != nil && x.SharingReciprocation != nil {
		return *x.SharingReciprocation
	}
	return 0
}

func (x *Sharing) GetSharingRemoteByteSize() int32 {
	if x != nil && x.SharingRemoteByteSize != nil {
		return *x.SharingRemoteByteSize
	}
	return 0
}

func (x *Sharing) GetSharingRemoteComment() string {
	if x != nil && x.SharingRemoteComment != nil {
		return *x.SharingRemoteComment
	}
	return ""
}

func (x *Sharing) GetSharingRemoteCrc() int32 {
	if x != nil && x.SharingRemoteCrc != nil {
		return *x.SharingRemoteCrc
	}
	return 0
}

func (x *Sharing) GetSharingRemoteLastModificationTime() int64 {
	if x != nil && x.SharingRemoteLastModificationTime != nil {
		return *x.SharingRemoteLastModificationTime
	}
	return 0
}

func (x *Sharing) GetSharingRemoteMessageCount() int32 {
	if x != nil && x.SharingRemoteMessageCount != nil {
		return *x.SharingRemoteMessageCount
	}
	return 0
}

func (x *Sharing) GetSharingRemoteName() string {
	if x != nil && x.SharingRemoteName != nil {
		return *x.SharingRemoteName
	}
	return ""
}

func (x *Sharing) GetSharingRemotePass() string {
	if x != nil && x.SharingRemotePass != nil {
		return *x.SharingRemotePass
	}
	return ""
}

func (x *Sharing) GetSharingRemotePath() string {
	if x != nil && x.SharingRemotePath != nil {
		return *x.SharingRemotePath
	}
	return ""
}

func (x *Sharing) GetSharingRemoteStoreUid() string {
	if x != nil && x.SharingRemoteStoreUid != nil {
		return *x.SharingRemoteStoreUid
	}
	return ""
}

func (x *Sharing) GetSharingRemoteType() string {
	if x != nil && x.SharingRemoteType != nil {
		return *x.SharingRemoteType
	}
	return ""
}

func (x *Sharing) GetSharingRemoteUid() string {
	if x != nil && x.SharingRemoteUid != nil {
		return *x.SharingRemoteUid
	}
	return ""
}

func (x *Sharing) GetSharingRemoteUser() string {
	if x != nil && x.SharingRemoteUser != nil {
		return *x.SharingRemoteUser
	}
	return ""
}

func (x *Sharing) GetSharingRemoteVersion() string {
	if x != nil && x.SharingRemoteVersion != nil {
		return *x.SharingRemoteVersion
	}
	return ""
}

func (x *Sharing) GetSharingResponseTime() int64 {
	if x != nil && x.SharingResponseTime != nil {
		return *x.SharingResponseTime
	}
	return 0
}

func (x *Sharing) GetSharingResponseType() int32 {
	if x != nil && x.SharingResponseType != nil {
		return *x.SharingResponseType
	}
	return 0
}

func (x *Sharing) GetSharingRoamLog() int32 {
	if x != nil && x.SharingRoamLog != nil {
		return *x.SharingRoamLog
	}
	return 0
}

func (x *Sharing) GetSharingStart() int64 {
	if x != nil && x.SharingStart != nil {
		return *x.SharingStart
	}
	return 0
}

func (x *Sharing) GetSharingStatus() int32 {
	if x != nil && x.SharingStatus != nil {
		return *x.SharingStatus
	}
	return 0
}

func (x *Sharing) GetSharingStop() int64 {
	if x != nil && x.SharingStop != nil {
		return *x.SharingStop
	}
	return 0
}

func (x *Sharing) GetSharingSyncFlags() int32 {
	if x != nil && x.SharingSyncFlags != nil {
		return *x.SharingSyncFlags
	}
	return 0
}

func (x *Sharing) GetSharingSyncInterval() int32 {
	if x != nil && x.SharingSyncInterval != nil {
		return *x.SharingSyncInterval
	}
	return 0
}

func (x *Sharing) GetSharingTimeToLive() int32 {
	if x != nil && x.SharingTimeToLive != nil {
		return *x.SharingTimeToLive
	}
	return 0
}

func (x *Sharing) GetSharingTimeToLiveAuto() int32 {
	if x != nil && x.SharingTimeToLiveAuto != nil {
		return *x.SharingTimeToLiveAuto
	}
	return 0
}

func (x *Sharing) GetSharingWorkingHoursDays() int32 {
	if x != nil && x.SharingWorkingHoursDays != nil {
		return *x.SharingWorkingHoursDays
	}
	return 0
}

func (x *Sharing) GetSharingWorkingHoursEnd() int64 {
	if x != nil && x.SharingWorkingHoursEnd != nil {
		return *x.SharingWorkingHoursEnd
	}
	return 0
}

func (x *Sharing) GetSharingWorkingHoursStart() int64 {
	if x != nil && x.SharingWorkingHoursStart != nil {
		return *x.SharingWorkingHoursStart
	}
	return 0
}

func (x *Sharing) GetXSharingBrowseUrl_() string {
	if x != nil && x.XSharingBrowseUrl_ != nil {
		return *x.XSharingBrowseUrl_
	}
	return ""
}

func (x *Sharing) GetXSharingCapabilities_() string {
	if x != nil && x.XSharingCapabilities_ != nil {
		return *x.XSharingCapabilities_
	}
	return ""
}

func (x *Sharing) GetXSharingConfigUrl() string {
	if x != nil && x.XSharingConfigUrl != nil {
		return *x.XSharingConfigUrl
	}
	return ""
}

func (x *Sharing) GetXSharingExendedCaps() string {
	if x != nil && x.XSharingExendedCaps != nil {
		return *x.XSharingExendedCaps
	}
	return ""
}

func (x *Sharing) GetXSharingFlavor_() string {
	if x != nil && x.XSharingFlavor_ != nil {
		return *x.XSharingFlavor_
	}
	return ""
}

func (x *Sharing) GetXSharingInstanceGuid() string {
	if x != nil && x.XSharingInstanceGuid != nil {
		return *x.XSharingInstanceGuid
	}
	return ""
}

func (x *Sharing) GetXSharingLocalType_() string {
	if x != nil && x.XSharingLocalType_ != nil {
		return *x.XSharingLocalType_
	}
	return ""
}

func (x *Sharing) GetXSharingProviderGuid() string {
	if x != nil && x.XSharingProviderGuid != nil {
		return *x.XSharingProviderGuid
	}
	return ""
}

func (x *Sharing) GetXSharingProviderName_() string {
	if x != nil && x.XSharingProviderName_ != nil {
		return *x.XSharingProviderName_
	}
	return ""
}

func (x *Sharing) GetXSharingProviderUrl_() string {
	if x != nil && x.XSharingProviderUrl_ != nil {
		return *x.XSharingProviderUrl_
	}
	return ""
}

func (x *Sharing) GetXSharingRemoteName_() string {
	if x != nil && x.XSharingRemoteName_ != nil {
		return *x.XSharingRemoteName_
	}
	return ""
}

func (x *Sharing) GetXSharingRemotePath_() string {
	if x != nil && x.XSharingRemotePath_ != nil {
		return *x.XSharingRemotePath_
	}
	return ""
}

func (x *Sharing) GetXSharingRemoteStoreUid_() string {
	if x != nil && x.XSharingRemoteStoreUid_ != nil {
		return *x.XSharingRemoteStoreUid_
	}
	return ""
}

func (x *Sharing) GetXSharingRemoteType_() string {
	if x != nil && x.XSharingRemoteType_ != nil {
		return *x.XSharingRemoteType_
	}
	return ""
}

func (x *Sharing) GetXSharingRemoteUid_() string {
	if x != nil && x.XSharingRemoteUid_ != nil {
		return *x.XSharingRemoteUid_
	}
	return ""
}

var File_sharing_proto protoreflect.FileDescriptor

var file_sharing_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8d, 0x2d, 0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x11, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x36, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x19, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x17, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x16, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x13, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0d, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x78, 0x6d, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x13,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x58, 0x6d, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52,
	0x0c, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x76,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x14,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x6d, 0x74,
	0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x6d, 0x74, 0x70, 0x88,
	0x01, 0x01, 0x12, 0x41, 0x0a, 0x1b, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x17, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e,
	0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x24, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x20, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x10, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x10,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x10, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52,
	0x0f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x15, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x16, 0x52, 0x12, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x41, 0x0a, 0x1a, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x18, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a,
	0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x12, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x1a, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x1b, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x15, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x48, 0x1c, 0x52, 0x14, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x48, 0x1d, 0x52, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x1e, 0x52, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x63, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x48, 0x1f, 0x52, 0x10, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x63, 0x88, 0x01, 0x01,
	0x12, 0x55, 0x0a, 0x25, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x20, 0x52, 0x21, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x1c, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x21, 0x52,
	0x19, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a,
	0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x22, 0x52, 0x11, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x23, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x24, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x25,
	0x52, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x48, 0x26, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x48, 0x27, 0x52, 0x10, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x28, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x48, 0x29, 0x52, 0x14, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x2a, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x05, 0x48, 0x2b, 0x52, 0x13, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x36, 0x20, 0x01, 0x28, 0x05, 0x48, 0x2c,
	0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x61, 0x6d, 0x4c, 0x6f, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x48, 0x2d, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x05, 0x48, 0x2e, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x39, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x2f, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x30, 0x52,
	0x10, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x31, 0x52, 0x13, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a,
	0x14, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x32, 0x52, 0x11, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x19, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x33, 0x52, 0x15, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x1a, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x34, 0x52, 0x17, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x44, 0x61, 0x79,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x19, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x35, 0x52, 0x16, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x45, 0x6e,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x1b, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x03, 0x48, 0x36, 0x52, 0x18, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x78, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x48, 0x37, 0x52, 0x11, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x39,
	0x0a, 0x16, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x48, 0x38,
	0x52, 0x14, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x78, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x48, 0x39, 0x52, 0x11, 0x78, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x16, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x3a, 0x52, 0x13, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x43, 0x61, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x78, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x3b, 0x52, 0x0e, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x6c, 0x61, 0x76, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x78, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x48, 0x3c, 0x52, 0x14, 0x78, 0x53, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x75, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x3d, 0x52, 0x11, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x78, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x48, 0x3e, 0x52, 0x14, 0x78,
	0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x3f, 0x52, 0x14, 0x78, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x38, 0x0a, 0x16, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x4b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x40, 0x52, 0x13, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15,
	0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x41, 0x52, 0x12, 0x78,
	0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x4d, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x42, 0x52, 0x12, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x1a,
	0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x43, 0x52, 0x16, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a,
	0x15, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x44, 0x52, 0x12,
	0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x45, 0x52, 0x11, 0x78, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x74,
	0x79, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x19, 0x0a, 0x17, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x78, 0x6d, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x42,
	0x1e, 0x0a, 0x1c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x19, 0x0a, 0x17, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x27, 0x0a, 0x25, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x1a, 0x0a, 0x18, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x75, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x19, 0x0a, 0x17,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x63, 0x42, 0x28,
	0x0a, 0x26, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x5f, 0x65, 0x6e, 0x64, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x19, 0x0a,
	0x17, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x78, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x78, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x73, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x76, 0x6f,
	0x72, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x78, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x1d, 0x0a,
	0x1b, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x78, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f,
	0x6f, 0x69, 0x6a, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x73, 0x74, 0x3b, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sharing_proto_rawDescOnce sync.Once
	file_sharing_proto_rawDescData = file_sharing_proto_rawDesc
)

func file_sharing_proto_rawDescGZIP() []byte {
	file_sharing_proto_rawDescOnce.Do(func() {
		file_sharing_proto_rawDescData = protoimpl.X.CompressGZIP(file_sharing_proto_rawDescData)
	})
	return file_sharing_proto_rawDescData
}

var file_sharing_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sharing_proto_goTypes = []interface{}{
	(*Sharing)(nil), // 0: Sharing
}
var file_sharing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sharing_proto_init() }
func file_sharing_proto_init() {
	if File_sharing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sharing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sharing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sharing_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sharing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sharing_proto_goTypes,
		DependencyIndexes: file_sharing_proto_depIdxs,
		MessageInfos:      file_sharing_proto_msgTypes,
	}.Build()
	File_sharing_proto = out.File
	file_sharing_proto_rawDesc = nil
	file_sharing_proto_goTypes = nil
	file_sharing_proto_depIdxs = nil
}
