// go-pst is a library for reading Personal Storage Table (.pst) files (written in Go/Golang).
//
// Copyright 2023 Marten Mooij
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:generate msgp -tests=false

syntax = "proto3";
option go_package = "github.com/mooijtech/go-pst;properties";

message Appointment {
  // Specifies a list of all the attendees except for the organizer, including resources and unsendable attendees.
  optional string all_attendees_string = 1; // @gotags: msg:"3333631,omitempty"
  // This property is set to TRUE.
  optional bool allow_external_check = 2; // @gotags: msg:"3335011,omitempty"
  // Specifies a bit field that describes the auxiliary state of the object.
  optional int32 appointment_auxiliary_flags = 3; // @gotags: msg:"332873,omitempty"
  // Specifies the color to be used when displaying the Calendar object.
  optional int32 appointment_color = 4; // @gotags: msg:"333003,omitempty"
  // Indicates whether a Meeting Response object is a counter proposal.
  optional bool appointment_counter_proposal = 5; // @gotags: msg:"3336711,omitempty"
  // Specifies the length of the event, in minutes.
  optional int32 appointment_duration = 6; // @gotags: msg:"332993,omitempty"
  // Indicates the date that the appointment ends.
  optional int64 appointment_end_date = 7; // @gotags: msg:"3329764,omitempty"
  // Indicates the time that the appointment ends.
  optional int64 appointment_end_time = 8; // @gotags: msg:"3329664,omitempty"
  // Specifies the end date and time for the event.
  optional int64 appointment_end_whole = 9; // @gotags: msg:"3329464,omitempty"
  // Indicates to the organizer the last sequence number that was sent to any attendee.
  optional int32 appointment_last_sequence = 10; // @gotags: msg:"332833,omitempty"
  // Indicates the message class of the Meeting object to be generated from the Meeting Request object.
  optional string appointment_message_class = 11; // @gotags: msg:"3631,omitempty"
  // Indicates whether attendees are not allowed to propose a new date and/or time for the meeting.
  optional bool appointment_not_allow_propose = 12; // @gotags: msg:"3337011,omitempty"
  // Specifies the number of attendees who have sent counter proposals that have not been accepted or rejected by the organizer.
  optional int32 appointment_proposal_number = 13; // @gotags: msg:"333693,omitempty"
  // Indicates the proposed value for the PidLidAppointmentDuration property (section 2.11) for a counter proposal.
  optional int32 appointment_proposed_duration = 14; // @gotags: msg:"333663,omitempty"
  // Specifies the proposed value for the PidLidAppointmentEndWhole property (section 2.14) for a counter proposal.
  optional int64 appointment_proposed_end_whole = 15; // @gotags: msg:"3336164,omitempty"
  // Specifies the proposed value for the PidLidAppointmentStartWhole property (section 2.29) for a counter proposal.
  optional int64 appointment_proposed_start_whole = 16; // @gotags: msg:"3336064,omitempty"
  // Specifies the user who last replied to the meeting request or meeting update.
  optional string appointment_reply_name = 18; // @gotags: msg:"3332831,omitempty"
  // Specifies the date and time at which the attendee responded to a received meeting request or Meeting Update object.
  optional int64 appointment_reply_time = 19; // @gotags: msg:"3331264,omitempty"
  // Specifies the sequence number of a Meeting object.
  optional int32 appointment_sequence = 20; // @gotags: msg:"332813,omitempty"
  // Indicates the date and time at which the PidLidAppointmentSequence property (section 2.25) was last modified.
  optional int64 appointment_sequence_time = 21; // @gotags: msg:"3328264,omitempty"
  // Identifies the date that the appointment starts.
  optional int64 appointment_start_date = 22; // @gotags: msg:"3329864,omitempty"
  // Identifies the time that the appointment starts.
  optional int64 appointment_start_time = 23; // @gotags: msg:"3329564,omitempty"
  // Specifies the start date and time of the appointment.
  optional int64 appointment_start_whole = 24; // @gotags: msg:"3329364,omitempty"
  // Specifies a bit field that describes the state of the object.
  optional int32 appointment_state_flags = 25; // @gotags: msg:"333033,omitempty"
  // Specifies whether the event is an all-day event.
  optional bool appointment_sub_type = 26; // @gotags: msg:"3330111,omitempty"
  // Indicates the time at which the appointment was last updated.
  optional int64 appointment_update_time = 31; // @gotags: msg:"3331864,omitempty"
  // Specifies the date and time at which the meeting-related object was sent.
  optional int64 attendee_critical_change = 32; // @gotags: msg:"164,omitempty"
  // Indicates whether the value of the PidLidLocation property (section 2.159) is set to the PidTagDisplayName property (section 2.676).
  optional bool auto_fill_location = 33; // @gotags: msg:"3333811,omitempty"
  // Specifies whether to automatically start the conferencing application when a reminder for the start of a meeting is executed.
  optional bool auto_start_check = 34; // @gotags: msg:"3334811,omitempty"
  // Specifies the availability of a user for the event described by the object.
  optional int32 busy_status = 35; // @gotags: msg:"332853,omitempty"
  // Contains the value of the CalendarType field from the PidLidAppointmentRecur property (section 2.22).
  optional int32 calendar_type = 36; // @gotags: msg:"283,omitempty"
  // Contains a list of all the sendable attendees who are also optional attendees.
  optional string cc_attendees_string = 37; // @gotags: msg:"3334031,omitempty"
  // Specifies a bit field that indicates how the Meeting object has changed.
  optional int32 change_highlight = 38; // @gotags: msg:"332843,omitempty"
  //  Indicates what actions the user has taken on this Meeting object.
  optional int32 client_intent = 40; // @gotags: msg:"213,omitempty"
  // Specifies the end date and time of the event in UTC.
  optional int64 clip_end = 41; // @gotags: msg:"3333464,omitempty"
  // Specifies the start date and time of the event in UTC.
  optional int64 clip_start = 42; // @gotags: msg:"3333364,omitempty"
  // Specifies the document to be launched when the user joins the meeting.
  optional string collaborate_doc = 43; // @gotags: msg:"3335131,omitempty"
  // When set to TRUE (0x00000001), the PidLidConferencingCheck property indicates that the associated meeting is one of the following types:
  optional bool conferencing_check = 44; // @gotags: msg:"3334411,omitempty"
  // Specifies the type of the meeting.
  optional int32 conferencing_type = 45; // @gotags: msg:"333453,omitempty"
  // Identifies the day interval for the recurrence pattern.
  optional int32 day_interval = 46; // @gotags: msg:"172,omitempty"
  // Identifies the day of the month for the appointment or meeting.
  optional int32 day_of_month = 47; // @gotags: msg:"40963,omitempty"
  // Indicates whether a delegate responded to the meeting request.
  optional bool delegate_mail = 48; // @gotags: msg:"911,omitempty"
  // Specifies the directory server to be used.
  optional string directory = 49; // @gotags: msg:"3334631,omitempty"
  // Identifies the end date of the recurrence range.
  optional int32 end_recurrence_date = 50; // @gotags: msg:"153,omitempty"
  // Identifies the end time of the recurrence range.
  optional int32 end_recurrence_time = 51; // @gotags: msg:"163,omitempty"
  // Specifies the date and time, in UTC, within a recurrence pattern that an exception will replace.
  optional int64 exception_replace_time = 52; // @gotags: msg:"3332064,omitempty"
  // Indicates that the object is a Recurring Calendar object with one or more exceptions, and that at least one of the Exception Embedded Message objects has at least one RecipientRow structure, as described in [MS-OXCDATA] section 2.8.3.
  optional bool f_exceptional_attendees = 53; // @gotags: msg:"3332311,omitempty"
  // Indicates that the Exception Embedded Message object has a body that differs from the Recurring Calendar object.
  optional bool f_exceptional_body = 54; // @gotags: msg:"3328611,omitempty"
  // Indicates whether invitations have been sent for the meeting that this Meeting object represents.
  optional bool f_invited = 55; // @gotags: msg:"3332111,omitempty"
  // Indicates whether the Meeting Request object represents an exception to a recurring series, and whether it was forwarded (even when forwarded by the organizer) rather than being an invitation sent by the organizer.
  optional bool forward_instance = 56; // @gotags: msg:"3329011,omitempty"
  // Indicates whether the Calendar folder from which the meeting was opened is another user's calendar.
  optional bool f_others_appointment = 58; // @gotags: msg:"3332711,omitempty"
  // Identifies the day of the week for the appointment or meeting.
  optional int32 i_calendar_day_of_week_mask = 60; // @gotags: msg:"40973,omitempty"
  // Contains the value of the PidLidBusyStatus property (section 2.47) on the Meeting object in the organizer's calendar at the time that the Meeting Request object or Meeting Update object was sent.
  optional int32 intended_busy_status = 62; // @gotags: msg:"333163,omitempty"
  // Indicates whether the object represents an exception (including an orphan instance).
  optional bool is_exception = 63; // @gotags: msg:"1011,omitempty"
  // Specifies whether the object is associated with a recurring series.
  optional bool is_recurring = 64; // @gotags: msg:"511,omitempty"
  // Indicates whether the user did not include any text in the body of the Meeting Response object.
  optional bool is_silent = 65; // @gotags: msg:"411,omitempty"
  // Specifies the location of the event.
  optional string location = 66; // @gotags: msg:"3328831,omitempty"
  // Indicates the type of Meeting Request object or Meeting Update object.
  optional int32 meeting_type = 67; // @gotags: msg:"383,omitempty"
  // Specifies the URL of the Meeting Workspace that is associated with a Calendar object.
  optional string meeting_workspace_url = 68; // @gotags: msg:"3328931,omitempty"
  // Indicates the monthly interval of the appointment or meeting.
  optional int32 month_interval = 69; // @gotags: msg:"192,omitempty"
  // Indicates the month of the year in which the appointment or meeting occurs.
  optional int32 month_of_year = 70; // @gotags: msg:"41023,omitempty"
  // Indicates the calculated month of the year in which the appointment or meeting occurs.
  optional int32 month_of_year_mask = 71; // @gotags: msg:"233,omitempty"
  // Specifies the URL to be launched when the user joins the meeting.
  optional string net_show_url = 72; // @gotags: msg:"3335231,omitempty"
  // Indicates whether the recurrence pattern has an end date.
  optional bool no_end_date_flag = 73; // @gotags: msg:"410711,omitempty"
  // Contains a list of all of the unsendable attendees who are also resources.
  optional string non_sendable_bcc = 74; // @gotags: msg:"3410431,omitempty"
  // Contains a list of all of the unsendable attendees who are also optional attendees.
  optional string non_sendable_cc = 75; // @gotags: msg:"3410331,omitempty"
  // Contains a list of all of the unsendable attendees who are also required attendees.
  optional string non_sendable_to = 76; // @gotags: msg:"3410231,omitempty"
  // Indicates the number of occurrences in the recurring appointment or meeting.
  optional int32 occurrences = 77; // @gotags: msg:"41013,omitempty"
  // Indicates the original value of the PidLidLocation property (section 2.159) before a meeting update.
  optional string old_location = 78; // @gotags: msg:"4031,omitempty"
  // Indicates the recurrence pattern for the appointment or meeting.
  optional int32 old_recurrence_type = 79; // @gotags: msg:"242,omitempty"
  // Indicates the original value of the PidLidAppointmentEndWhole property (section 2.14) before a meeting update.
  optional int64 old_when_end_whole = 80; // @gotags: msg:"4264,omitempty"
  // Indicates the original value of the PidLidAppointmentStartWhole property (section 2.29) before a meeting update.
  optional int64 old_when_start_whole = 81; // @gotags: msg:"4164,omitempty"
  // Specifies the password for a meeting on which the PidLidConferencingType property (section 2.66) has the value 0x00000002.
  optional string online_password = 82; // @gotags: msg:"3335331,omitempty"
  // Specifies optional attendees.
  optional string optional_attendees = 83; // @gotags: msg:"731,omitempty"
  // Specifies the email address of the organizer.
  optional string organizer_alias = 84; // @gotags: msg:"3334731,omitempty"
  // Specifies the date and time at which a Meeting Request object was sent by the organizer.
  optional int64 owner_critical_change = 86; // @gotags: msg:"2664,omitempty"
  // Indicates the name of the owner of the mailbox.
  optional string owner_name = 87; // @gotags: msg:"3332631,omitempty"
  // Identifies the length, in minutes, of the appointment or meeting.
  optional int32 recurrence_duration = 88; // @gotags: msg:"41093,omitempty"
  // Specifies a description of the recurrence pattern of the Calendar object.
  optional string recurrence_pattern = 89; // @gotags: msg:"3333031,omitempty"
  // Specifies the recurrence type of the recurring series.
  optional int32 recurrence_type = 90; // @gotags: msg:"333293,omitempty"
  // Specifies whether the object represents a recurring series.
  optional bool recurring = 91; // @gotags: msg:"3331511,omitempty"
  // Specifies the interval, in minutes, between the time at which the reminder first becomes overdue and the start time of the Calendar object.
  optional int32 reminder_delta = 92; // @gotags: msg:"340493,omitempty"
  // Specifies the filename of the sound that a client is to play when the reminder for that object becomes overdue.
  optional string reminder_file_parameter = 93; // @gotags: msg:"3407931,omitempty"
  // Specifies whether the client is to respect the current values of the  PidLidReminderPlaySound property (section 2.221) and the PidLidReminderFileParameter property (section 2.219), or use the default values for those properties.
  optional bool reminder_override = 94; // @gotags: msg:"3407611,omitempty"
  // Specifies whether the client is to play a sound when the reminder becomes overdue.
  optional bool reminder_play_sound = 95; // @gotags: msg:"3407811,omitempty"
  // Specifies whether a reminder is set on the object.
  optional bool reminder_set = 96; // @gotags: msg:"3405111,omitempty"
  // Specifies the point in time when a reminder transitions from pending to overdue.
  optional int64 reminder_signal_time = 97; // @gotags: msg:"3414464,omitempty"
  // Specifies the initial signal time for objects that are not Calendar objects.
  optional int64 reminder_time = 98; // @gotags: msg:"3405064,omitempty"
  // Indicates the time and date of the reminder for the appointment or meeting.
  optional int64 reminder_time_date = 99; // @gotags: msg:"3405364,omitempty"
  // Indicates the time of the reminder for the appointment or meeting.
  optional int64 reminder_time_time = 100; // @gotags: msg:"3405264,omitempty"
  // This property is not set and, if set, is ignored.
  optional int32 reminder_type = 101; // @gotags: msg:"340773,omitempty"
  // Identifies required attendees for the appointment or meeting.
  optional string required_attendees = 102; // @gotags: msg:"631,omitempty"
  // Identifies resource attendees for the appointment or meeting.
  optional string resource_attendees = 103; // @gotags: msg:"831,omitempty"
  // Specifies the response status of an attendee.
  optional int32 response_status = 104; // @gotags: msg:"333043,omitempty"
  // Indicates whether the Meeting Request object or Meeting Update object has been processed.
  optional bool server_processed = 105; // @gotags: msg:"3425211,omitempty"
  // Indicates what processing actions have been taken on this Meeting Request object or Meeting Update object.
  optional int32 server_processing_actions = 106; // @gotags: msg:"342533,omitempty"
  // Indicates that the original MIME message contained a single MIME part.
  optional bool single_bodyi_cal = 107; // @gotags: msg:"3340311,omitempty"
  // Identifies the start date of the recurrence pattern.
  optional int32 start_recurrence_date = 108; // @gotags: msg:"133,omitempty"
  // Identifies the start time of the recurrence pattern.
  optional int32 start_recurrence_time = 109; // @gotags: msg:"143,omitempty"
  // Specifies information about the time zone of a recurring meeting.
  optional int32 time_zone = 110; // @gotags: msg:"123,omitempty"
  // Specifies a human-readable description of the time zone that is represented by the data in the PidLidTimeZoneStruct property (section 2.342).
  optional string time_zone_description = 111; // @gotags: msg:"3333231,omitempty"
  // Contains a list of all of the sendable attendees who are also required attendees.
  optional string to_attendees_string = 113; // @gotags: msg:"3333931,omitempty"
  // Identifies the number of weeks that occur between each meeting.
  optional int32 week_interval = 114; // @gotags: msg:"182,omitempty"
  // Contains the value of the PidLidLocation property (section 2.159) from the associated Meeting object.
  optional string where = 115; // @gotags: msg:"231,omitempty"
  // Indicates the yearly interval of the appointment or meeting.
  optional int32 year_interval = 116; // @gotags: msg:"202,omitempty"
  // 
  optional string location_url = 117; 
  // Specifies whether to allow the meeting to be forwarded.
  optional bool meeting_do_not_forward = 118; 
  // Specifies the end time, in UTC, of the publishing range.
  optional int32 free_busy_publish_end = 119; // @gotags: msg:"266963,omitempty"
  // Specifies the start time, in UTC, of the publishing range.
  optional int32 free_busy_publish_start = 120; // @gotags: msg:"266953,omitempty"
  // Specifies the time, in UTC, that the data was published.
  optional int64 free_busy_range_timestamp = 121; // @gotags: msg:"2672864,omitempty"
  // Contains the date and time, in UTC, when an appointment or meeting ends.
  optional int64 i_calendar_end_time = 122; // @gotags: msg:"429264,omitempty"
  // Contains the date and time, in UTC, for the activation of the next reminder.
  optional int64 i_calendar_reminder_next_time = 123; // @gotags: msg:"429864,omitempty"
  // Indicates whether a client has already processed a received task communication.
  optional bool processed = 124; // @gotags: msg:"3200111,omitempty"
  // Indicates whether a client or server is to automatically respond to all meeting requests for the attendee or resource.
  optional bool schedule_info_auto_accept_appointments = 126; // @gotags: msg:"2673311,omitempty"
  // Indicates whether the delegator wants to receive copies of the meeting-related objects that are sent to the delegate.
  optional bool schedule_info_delegator_wants_copy = 130; // @gotags: msg:"2669011,omitempty"
  // Indicates whether the delegator wants to receive informational updates.
  optional bool schedule_info_delegator_wants_info = 131; // @gotags: msg:"2669911,omitempty"
  // Indicates whether a client or server, when automatically responding to meeting requests, is to decline Meeting Request objects that overlap with previously scheduled events.
  optional bool schedule_info_disallow_overlapping_appts = 132; // @gotags: msg:"2673511,omitempty"
  // Indicates whether a client or server, when automatically responding to meeting requests, is to decline Meeting Request objects that represent a recurring series.
  optional bool schedule_info_disallow_recurring_appts = 133; // @gotags: msg:"2673411,omitempty"
  // Contains a value set to TRUE by the client, regardless of user input.
  optional bool schedule_info_dont_mail_delegates = 134; // @gotags: msg:"2669111,omitempty"
  // Set to 0x00000000 when sending and is ignored on receipt.
  optional int32 schedule_info_resource_type = 144; // @gotags: msg:"266893,omitempty"
}
