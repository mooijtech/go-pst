// go-pst is a library for reading Personal Storage Table (.pst) files (written in Go/Golang).
//
// Copyright 2023 Marten Mooij
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:generate msgp -tests=false

syntax = "proto3";
option go_package = "github.com/mooijtech/go-pst;properties";

message Attachment {
  // Contains the Content-Type of the Mac attachment.
  optional string attachment_mac_content_type = 1; 
  // Contains the original permission type data associated with a web reference attachment.
  optional int32 attachment_original_permission_type = 3; 
  // Contains the permission type data associated with a web reference attachment.
  optional int32 attachment_permission_type = 4; 
  // Contains the provider type data associated with a web reference attachment.
  optional string attachment_provider_type = 5; 
  // Contains the base of a relative URI.
  optional string attach_content_base = 7; // @gotags: msg:"14097,omitempty" type:"31,omitempty"
  // Contains a content identifier unique to the Message object that matches a corresponding "cid:" URI schema reference in the HTML body of the Message object.
  optional string attach_content_id = 8; // @gotags: msg:"14098,omitempty" type:"31,omitempty"
  // Contains a relative or full URI that matches a corresponding reference in the HTML body of a Message object.
  optional string attach_content_location = 9; // @gotags: msg:"14099,omitempty" type:"31,omitempty"
  // Contains a file name extension that indicates the document type of an attachment.
  optional string attach_extension = 13; // @gotags: msg:"14083,omitempty" type:"31,omitempty"
  // Contains the 8.3 name of the PidTagAttachLongFilename property (section 2.595).
  optional string attach_filename = 14; // @gotags: msg:"14084,omitempty" type:"31,omitempty"
  // Indicates which body formats might reference this attachment when rendering data.
  optional int32 attach_flags = 15; // @gotags: msg:"14100,omitempty" type:"3,omitempty"
  // Contains the full filename and extension of the Attachment object.
  optional string attach_long_filename = 16; // @gotags: msg:"14087,omitempty" type:"31,omitempty"
  // Contains the fully-qualified path and file name with extension.
  optional string attach_long_pathname = 17; // @gotags: msg:"14093,omitempty" type:"31,omitempty"
  // Indicates that a contact photo attachment is attached to a Contact object.
  optional bool attachment_contact_photo = 18; // @gotags: msg:"32767,omitempty" type:"11,omitempty"
  // Indicates special handling for an Attachment object.
  optional int32 attachment_flags = 19; // @gotags: msg:"32765,omitempty" type:"3,omitempty"
  // Indicates whether an Attachment object is hidden from the end user.
  optional bool attachment_hidden = 20; // @gotags: msg:"32766,omitempty" type:"11,omitempty"
  // Contains the type of Message object to which an attachment is linked.
  optional int32 attachment_link_id = 21; // @gotags: msg:"32762,omitempty" type:"3,omitempty"
  // Represents the way the contents of an attachment are accessed.
  optional int32 attach_method = 22; // @gotags: msg:"14085,omitempty" type:"3,omitempty"
  // Contains a content-type MIME header.
  optional string attach_mime_tag = 23; // @gotags: msg:"14094,omitempty" type:"31,omitempty"
  // Identifies the Attachment object within its Message object.
  optional int32 attach_number = 24; // @gotags: msg:"3617,omitempty" type:"3,omitempty"
  // Contains the 8.3 name of the PidTagAttachLongPathname property (section 2.596).
  optional string attach_pathname = 25; // @gotags: msg:"14088,omitempty" type:"31,omitempty"
  // Contains the size, in bytes, consumed by the Attachment object on the server.
  optional int32 attach_size = 27; // @gotags: msg:"3616,omitempty" type:"3,omitempty"
  // Contains the name of an attachment file, modified so that it can be correlated with TNEF messages.
  optional string attach_transport_name = 29; // @gotags: msg:"14092,omitempty" type:"31,omitempty"
  // Specifies the character set of an attachment received via MIME with the content-type of text.
  optional string text_attachment_charset = 31; // @gotags: msg:"14107,omitempty" type:"31,omitempty"
}
